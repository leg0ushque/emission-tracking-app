@model List<EmisTracking.WebApi.Models.ViewModels.TaxViewModel>
@using EmisTracking.Localization
@using EmisTracking.WebApp.Helpers
@{
    ViewData[Constants.GenerateBreadcrumb] = new();
    ViewData["Title"] = LangResources.Titles.TaxesIndex;

    var isAdmin = (ViewData[Constants.ViewDataConstants.IsAdmin] as bool?).GetValueOrDefault();
    var isDirector = (ViewData[Constants.ViewDataConstants.IsDirector] as bool?).GetValueOrDefault();
    var isAccountant = (ViewData[Constants.ViewDataConstants.IsAccountant] as bool?).GetValueOrDefault();

    var hazClasses = EnumHelper.HazardClasses;

    var groupedData = Model
        .GroupBy(t => new { t.HazardClass, t.Year })
        .ToDictionary(
            g => g.Key,
            g => g.ToList()
        );

    var chartSeries = groupedData.Select(group => new
    {
        name = $"{group.Key.HazardClass} ({group.Key.Year})",
        data = Enumerable.Range(1, 12).Select(month =>
            group.Value.Where(item => item.Month == month)
                        .Sum(item => item.TotalAmount))
                        .ToArray()
    }).ToArray();

    var categories = Enumerable.Range(1, 12)
        .Select(month => $"{Model.FirstOrDefault()?.Year ?? DateTime.Now.Year}-{month:D2}-01T00:00:00.000Z")
        .ToArray();
}

@section Breadcrumb
{
    <li class="breadcrumb-item active">@ViewData["Title"]</li>
}


<div class="col-12">
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Суммы налоговых выплат по классам опасности<span>/всё время</span></h5>

            <!-- Line Chart -->
            <div id="reportsChart" style="min-height: 365px;" class="">
            </div>

            <script>
                const series = @Html.Raw(Json.Serialize(chartSeries));
                const categories = @Html.Raw(Json.Serialize(categories));

                document.addEventListener("DOMContentLoaded", () => {
                  new ApexCharts(document.querySelector("#reportsChart"), {
                    series: series,
                    chart: {
                      height: 350,
                      type: 'area',
                      toolbar: {
                        show: false
                      },
                    },
                    markers: {
                      size: 4
                    },
                    colors: ['#4154f1', '#2eca6a', '#ff771d', '#00bcd4'],
                    fill: {
                      type: "gradient",
                      gradient: {
                        shadeIntensity: 1,
                        opacityFrom: 0.3,
                        opacityTo: 0.4,
                        stops: [0, 90, 100]
                      }
                    },
                    dataLabels: {
                      enabled: false
                    },
                    stroke: {
                      curve: 'smooth',
                      width: 2
                    },
                    xaxis: {
                      type: 'datetime',
                      labels: {
                        format: 'MM/yy',
                      },
                      categories: categories
                    },
                    tooltip: {
                      x: {
                        format: 'MM/yy'
                      },
                    }
                  }).render();
                });
            </script>
        </div>
    </div>
</div>

<a class="btn btn-primary" asp-action="Create" asp-controller="Taxes">
    <i class="fas fa-plus"></i>
    @LangResources.CreateButtonText
</a>

<table class="table-striped table-bordered" id="mainItemsTable">
    <thead>
        <tr>
            <th scope="col">№</th>
            <th scope="col">@LangResources.Fields.Month</th>
            <th scope="col">@LangResources.Fields.Year</th>
            <th scope="col">@LangResources.Fields.HazardClass</th>
            <th scope="col">@LangResources.Fields.TaxAmount</th>
            <th scope="col">@LangResources.Fields.IsPaid</th>

            @if (isAdmin || isAccountant)
            {
                <th scope="col" data-orderable="false" data-searchable="false"></th>
                <th scope="col" data-orderable="false" data-searchable="false"></th>
            }
        </tr>
    </thead>
    <tbody>
        @{
            foreach (var item in Model)
            {
                <tr>
                    <td></td>
                    <td>@item.Month</td>
                    <td>@item.Year</td>
                    <td>@hazClasses[item.HazardClass]</td>
                    <td>@item.TotalAmount</td>
                    <td>@await Html.PartialAsync("_Boolean", item.IsPaid)</td>

                    @if (isAdmin || isAccountant)
                    {
                        <td>
                            <a class="btn btn-outline-primary"
                               asp-controller="Taxes" asp-action="Update" asp-route-id="@item.Id"
                               name="@LangResources.UpdateButtonText">
                                <i class="fas fa-pen"></i>
                            </a>
                        </td>
                        <td>
                            <a class="btn btn-outline-danger"
                               asp-controller="Taxes" asp-action="Delete" asp-route-id="@item.Id"
                               name="@LangResources.DeleteButtonText">
                                <i class="fas fa-trash"></i>
                            </a>
                        </td>
                    }
                </tr>
            }
        }
    </tbody>
</table>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        await Html.RenderPartialAsync("_JqueryDatatable");

        var columnWidths = new Queue<string>(new[] { "15%", "15%", "20%", "20%", "20%" });
        if (isAdmin || isAccountant)
        {
            columnWidths.Enqueue(Constants.DefaultEditDeleteButtonsWidth);
            columnWidths.Enqueue(Constants.DefaultEditDeleteButtonsWidth);
        }

        await Html.RenderPartialAsync("_DataTableInitialization", columnWidths);
    }
}