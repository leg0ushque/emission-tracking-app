@model EmisTracking.WebApi.Models.ViewModels.EmissionSourceViewModel

@{
    ViewData[Constants.GenerateBreadcrumb] = new();
}

@using EmisTracking.Localization
@using EmisTracking.WebApi.Models.Enums
@using EmisTracking.WebApp.Helpers

@section Breadcrumb
{
    <li class="breadcrumb-item active"><a asp-controller="EmissionSources" asp-action="Index">@LangResources.Titles.EmissionSourcesIndex</a></li>
    <li class="breadcrumb-item active">@ViewData["Title"]</li>
}

<form asp-controller="EmissionSources" asp-action="@ViewData["AspAction"]" asp-antiforgery="true" method="post">
    <div class="validation text-danger" asp-validation-summary="ModelOnly"></div>
    <input asp-for="Id" hidden="hidden" />

    <div class="row mb-3">
        <label asp-for="SubdivisionId" class="col-md-2 control-form-label"></label>
        <div class="col-sm-6">
            <select asp-for="SubdivisionId" class="form-select">
                <option value="" disabled selected>@LangResources.ChooseSomething</option>
                @if (Model.Subdivisions?.Any() ?? false)
                {
                    @foreach (var item in Model.Subdivisions)
                    {
                        <option value="@item.Value">@item.Name</option>
                    }
                }
            </select>
            <span asp-validation-for="SubdivisionId" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-3">
        <label asp-for="Name" class="col-md-2 control-form-label"></label>
        <div class="col-sm-6">
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
    </div>

    <div class="alert alert-secondary">
        <span><strong>@LangResources.ModeMethodologyCategoryHint1</strong></span><br />
        <ul>
            <li>@LangResources.ModeMethodologyCategoryHint2</li>
            <li>@LangResources.ModeMethodologyCategoryHint3</li>
            <li>@LangResources.ModeMethodologyCategoryHint4</li>
            <li>@LangResources.ModeMethodologyCategoryHint5</li>
        </ul>
    </div>

    <div class="row mb-3">
        <label asp-for="ModeId" class="col-md-2 control-form-label"></label>
        <div class="col-sm-6">
            <div class="input-group">
                <select asp-for="ModeId" class="form-select">
                    <option value="" disabled selected>@LangResources.ChooseSomething</option>
                    @if (Model.Modes?.Any() ?? false)
                    {
                        @foreach (var item in Model.Modes)
                        {
                            <option value="@item.Value">@item.Name</option>
                        }
                    }
                </select>
                <button type="button" class="btn btn-outline-secondary clear-selection" data-target="ModeId"><i class="fas fa-times"></i></button>
            </div>
            <span asp-validation-for="ModeId" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-3">
        <label asp-for="ProcessCategory" class="col-md-2 control-form-label"></label>
        <div class="col-sm-6">
            <div class="input-group">
                <select asp-for="ProcessCategory" class="form-select">
                    <option value="" disabled selected>@LangResources.ChooseSomething</option>
                    @foreach (var item in EnumHelper.GetProcessCategoriesDropdownValues())
                    {
                        <option value="@item.Value">@item.Name</option>
                    }
                </select>
                <button type="button" class="btn btn-outline-secondary clear-selection" data-target="ProcessCategory"><i class="fas fa-times"></i></button>
            </div>
            <span asp-validation-for="ProcessCategory" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-3">
        <label asp-for="MethodologyId" class="col-md-2 control-form-label"></label>
        <div class="col-sm-6">
            <div class="input-group">
                <select asp-for="MethodologyId" class="form-select">
                    <option value="" disabled selected>@LangResources.ChooseSomething</option>
                    @if (Model.Methodologies?.Any() ?? false)
                    {
                        @foreach (var item in Model.Methodologies)
                        {
                            <option value="@item.Value">@item.Name</option>
                        }
                    }
                </select>
                <button type="button" class="btn btn-outline-secondary clear-selection" data-target="MethodologyId"><i class="fas fa-times"></i></button>
            </div>
            <span asp-validation-for="MethodologyId" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-sm-6">
            <input type="submit" class="btn btn-primary" value="@LangResources.SaveButtonText" />
        </div>
    </div>
    <br />
    <a asp-action="Index" class="btn btn-outline-secondary">
        <i class="fas fa-arrow-left"></i>
        @LangResources.ReturnButtonText
    </a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        @* Скрипты для динамического поведения режим-методика-категория *@
        $(document).ready(function () {
            // Блокировка или разблокировка поля и кнопки очистки
            function toggleField(selector, buttonSelector, isEnabled) {
                $(selector).prop('disabled', !isEnabled);
                $(buttonSelector).prop('disabled', !isEnabled);
            }

            // Логика для изменения выбора "Режима"
            $('select[name="ModeId"]').on('change', function () {
                const modeIsSelected = !!$(this).val();
                toggleField('select[name="MethodologyId"]', '[data-target="MethodologyId"]', !modeIsSelected);
                toggleField('select[name="ProcessCategory"]', '[data-target="ProcessCategory"]', !modeIsSelected);

                if (modeIsSelected) {
                    $('select[name="MethodologyId"]').val('');
                    $('select[name="ProcessCategory"]').val('');
                }
            });

            // Логика для изменения выбора "Методики" и "Категории процесса"
            $('select[name="MethodologyId"], select[name="ProcessCategory"]').on('change', function () {
                const methodologyOrCategorySelected =
                    !!$('select[name="MethodologyId"]').val() || !!$('select[name="ProcessCategory"]').val();

                toggleField('select[name="ModeId"]', '[data-target="ModeId"]', !methodologyOrCategorySelected);

                if (methodologyOrCategorySelected) {
                    $('select[name="ModeId"]').val('');
                }
            });

            // Логика для кнопок очистки рядом с каждым select
            $('.clear-selection').on('click', function () {
                const target = $(this).data('target');
                $(`select[name="${target}"]`).val('').trigger('change');
            });

            // Инициализация значений на странице
            $('select[name="ModeId"]').trigger('change');
            $('select[name="MethodologyId"], select[name="ProcessCategory"]').trigger('change');
        });
    </script>
}